// Урок 1. Вводная лекция. Алгоритмы. Сложность алгоритмов
// ==============================================================================================
// Вопрос: Что такое сложность алгоритма и какие они бывают?

// Константная - O(1);
// Линейная - O(n);
// Логарифмическа - O(log n);
// Квадратная - O(n^2).

package lectures.sem_01;

public class Program_01 {
    public static void main (String[] args){
        int a = 5;

        System.out.println(sumN(a));
        System.out.println(sum(a));
    }

    public static int sumN (int n) { // Линейная сложность- O(n); Можно ли оптимизировать? (Через арифметическую прогрессию)
        int result = 0;
        for (int i = 1; i <= n; i++) 
            result += i;
        return result;
        
    }

    public static int sum (int n) { // Арифметическая прогрессия

        return n * (n + 1) / 2;         
    }
    
}


/**
 * Задача 1. 
 * Необходимо написать алгоритм, считающий сумму всех чисел
 * от 1 до N. Согласно свойствам линейной сложности,
 * количество итераций цикла будет линейно изменяться
 * относительно изменения размера N.
 */